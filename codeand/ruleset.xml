<?xml version="1.0"?>
<ruleset name="codeand">
    <description>Codeand WordPress Coding Standards</description>

	<rule ref="PSR2">
		<exclude name="PSR2.ControlStructures.ControlStructureSpacing.SpacingAfterOpenBrace"/>
        <exclude name="PSR2.ControlStructures.ControlStructureSpacing.SpaceBeforeCloseBrace"/>
	</rule>

    <rule ref="PSR12">
		<!-- Use 1 space before and after braces & brackets -->
		<exclude name="PSR12.ControlStructures.ControlStructureSpacing.SpacingAfterOpenBrace" />
		<exclude name="PSR12.ControlStructures.ControlStructureSpacing.SpaceBeforeCloseBrace" />
		<exclude name="PSR2.Methods.FunctionCallSignature.SpaceAfterOpenBracket" />
		<exclude name="PSR2.Methods.FunctionCallSignature.SpaceBeforeCloseBracket" />
	</rule>
    <rule ref="Generic.Arrays.DisallowLongArraySyntax"/>

    <rule ref="WordPress">
        <exclude name="Generic.Arrays.DisallowShortArraySyntax.Found"/>
        <exclude name="Generic.WhiteSpace.ArbitraryParenthesesSpacing.SpaceAfterOpen"/>
        <exclude name="Generic.WhiteSpace.ArbitraryParenthesesSpacing.SpaceBeforeClose"/>

        <exclude name="PEAR.Functions.FunctionCallSignature"/>

        <exclude name="Squiz.Commenting.ClassComment.Missing"/>
        <exclude name="Squiz.Commenting.FileComment.Missing"/>
        <exclude name="Squiz.Commenting.FileComment.MissingPackageTag"/>
        <exclude name="Squiz.Commenting.FileComment.SpacingAfterOpen"/>
        <exclude name="Squiz.Commenting.FunctionComment.Missing"/>
        <exclude name="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingAfterOpen"/>

        <exclude name="WordPress.Arrays"/>
        <exclude name="WordPress.Files.FileName"/>
        <exclude name="WordPress.NamingConventions.ValidFunctionName"/>
        <exclude name="WordPress.NamingConventions.ValidHookName"/>
        <exclude name="WordPress.NamingConventions.ValidVariableName"/>
        <!-- <exclude name="WordPress.PHP.DisallowShortTernary"/> -->

		<!-- Allow with or without semicolons. -->
		<exclude name="Squiz.PHP.EmbeddedPhp.NoSemicolon" />

		<!-- Exclude rules against brackets on new lines -->
		<exclude name="Generic.Functions.OpeningFunctionBraceKernighanRitchie.BraceOnNewLine" />
		<exclude name="Generic.Classes.OpeningBraceSameLine.BraceOnNewLine" />

		<!-- Allow new line after close bracket-->
		<exclude name="WordPress.WhiteSpace.ControlStructureSpacing.ExtraSpaceAfterCloseParenthesis" />

		<!-- No to Yoda conditions. Yes to banning assignment in conditionals. -->
		<exclude name="WordPress.PHP.YodaConditions" />

		<!-- Use spaces over tabs -->
		<exclude name="Generic.WhiteSpace.DisallowSpaceIndent.SpacesUsed" />

		<!-- Use CamelCaps method names over snake case -->
		<exclude name="WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid" />

		<!-- Prefer alignment over line length -->
		<exclude name="Generic.Files.LineLength.TooLong" />
    </rule>

	<!-- Prefer alignment over line length. -->
    <rule ref="WordPress.Arrays.MultipleStatementAlignment">
        <properties>
            <property name="maxColumn" value="1000" />
        </properties>
    </rule>

	<!-- Ban inline assignment in control structures (see note on Yoda Conditions above). -->
  	<!-- <rule ref="PSR2R.ControlStructures.NoInlineAssignment" /> -->

    <!-- Namespace Use statements -->
    <!-- <rule ref="PSR2R.Namespaces.UnusedUseStatement" /> -->
    <!-- <rule ref="PSR2R.Namespaces.UseInAlphabeticalOrder" /> -->
</ruleset>
